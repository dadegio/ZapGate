"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/content/[id]/page",{

/***/ "(app-pages-browser)/./lib/nostr.ts":
/*!**********************!*\
  !*** ./lib/nostr.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   countActivePurchases: function() { return /* binding */ countActivePurchases; },\n/* harmony export */   createDeleteEvent: function() { return /* binding */ createDeleteEvent; },\n/* harmony export */   createEvent: function() { return /* binding */ createEvent; },\n/* harmony export */   createUnsubscribeEvent: function() { return /* binding */ createUnsubscribeEvent; },\n/* harmony export */   createZapReceipt: function() { return /* binding */ createZapReceipt; },\n/* harmony export */   createZapRequest: function() { return /* binding */ createZapRequest; },\n/* harmony export */   generateSecretKey: function() { return /* binding */ generateSecretKey; },\n/* harmony export */   pool: function() { return /* binding */ pool; },\n/* harmony export */   publishEvent: function() { return /* binding */ publishEvent; }\n/* harmony export */ });\n/* harmony import */ var nostr_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nostr-tools */ \"(app-pages-browser)/./node_modules/nostr-tools/lib/esm/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./lib/config.ts\");\n\n\n// Pool condiviso\nconst pool = new nostr_tools__WEBPACK_IMPORTED_MODULE_0__.SimplePool();\n// 🔗 Utility: array di soli URL (stringhe)\nconst relayUrls = _config__WEBPACK_IMPORTED_MODULE_1__.RELAYS.map((r)=>r.url);\n/**\r\n * Utils: Uint8Array -> hex string\r\n */ function toHex(bytes) {\n    return Array.from(bytes).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\r\n * Genera una secret key random (Uint8Array)\r\n */ function generateSecretKey() {\n    const sk = new Uint8Array(32);\n    crypto.getRandomValues(sk);\n    return sk;\n}\n/**\r\n * Crea e firma un evento Nostr\r\n */ function createEvent(kind, content) {\n    let tags = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], sk = arguments.length > 3 ? arguments[3] : void 0;\n    const secret = sk || generateSecretKey();\n    const skHex = toHex(secret) // ✅ conversione in hex\n    ;\n    const pubkey = (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.getPublicKey)(skHex);\n    const ev = {\n        kind,\n        pubkey,\n        created_at: Math.floor(Date.now() / 1000),\n        tags,\n        content\n    };\n    return {\n        ...ev,\n        id: (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.getEventHash)(ev),\n        sig: (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.signEvent)(ev, skHex)\n    };\n}\n/**\r\n * Crea una Zap Request (kind 9734)\r\n */ function createZapRequest(param) {\n    let { senderPubkey, receiverPubkey, amount, noteId, sk } = param;\n    const tags = [\n        [\n            \"p\",\n            receiverPubkey\n        ],\n        [\n            \"amount\",\n            String(amount)\n        ],\n        [\n            \"from\",\n            senderPubkey\n        ]\n    ];\n    if (noteId) tags.push([\n        \"e\",\n        noteId\n    ]);\n    return createEvent(9734, \"Zap request of \".concat(amount, \" sats\"), tags, sk);\n}\n/**\r\n * Crea una Zap Receipt (kind 9735)\r\n */ function createZapReceipt(param) {\n    let { receiverPubkey, senderPubkey, amount, zapRequestId, sk } = param;\n    const tags = [\n        [\n            \"p\",\n            receiverPubkey\n        ],\n        [\n            \"payer\",\n            senderPubkey\n        ],\n        [\n            \"amount\",\n            String(amount)\n        ],\n        [\n            \"e\",\n            zapRequestId\n        ]\n    ];\n    return createEvent(9735, \"Zap receipt of \".concat(amount, \" sats\"), tags, sk);\n}\n/**\r\n * Pubblica un evento su tutti i relay\r\n */ async function publishEvent(ev) {\n    let signed = ev;\n    // se ho NIP-07 uso quello\n    if (window.nostr) {\n        signed = await window.nostr.signEvent(ev);\n    } else {\n        console.warn(\"⚠ Nessun provider nostr (NIP-07), uso sk random\");\n        // fallback: firma locale (⚠ se vuoi usa la tua sk qui)\n        signed.sig = (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.signEvent)(ev, \"\");\n    }\n    // ✅ ora passo solo string[]\n    const pubs = pool.publish(relayUrls, signed);\n    await Promise.all(pubs);\n    console.log(\"\\uD83D\\uDCE4 Pubblico evento su relay:\", signed);\n}\nasync function countActivePurchases(postId, relays) {\n    return new Promise((resolve)=>{\n        const lastEvent = {};\n        const sub = pool.sub(relays, [\n            {\n                kinds: [\n                    9735,\n                    9736\n                ],\n                \"#e\": [\n                    postId\n                ]\n            }\n        ]);\n        sub.on(\"event\", (event)=>{\n            var _event_tags_find;\n            const payer = (_event_tags_find = event.tags.find((t)=>t[0] === \"payer\")) === null || _event_tags_find === void 0 ? void 0 : _event_tags_find[1];\n            if (!payer) return;\n            const prev = lastEvent[payer];\n            if (!prev || event.created_at > prev.created_at) {\n                lastEvent[payer] = event;\n            }\n        });\n        sub.on(\"eose\", ()=>{\n            const stillActive = Object.values(lastEvent).filter((ev)=>ev.kind === 9735);\n            resolve(stillActive.length);\n            sub.unsub();\n        });\n    });\n}\n/**\r\n * Crea un evento di eliminazione (kind 5)\r\n */ function createDeleteEvent(eventId) {\n    let reason = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"deleted\", sk = arguments.length > 2 ? arguments[2] : void 0;\n    const tags = [\n        [\n            \"e\",\n            eventId\n        ],\n        [\n            \"reason\",\n            reason\n        ]\n    ];\n    return createEvent(5, reason, tags, sk);\n}\n/**\r\n * Crea un evento di unsubscribe (kind 9736 personalizzato)\r\n */ function createUnsubscribeEvent(postId, userPubkey, sk) {\n    return createEvent(9736, \"Unsubscribe from post \".concat(postId), [\n        [\n            \"e\",\n            postId\n        ],\n        [\n            \"payer\",\n            userPubkey\n        ] // 👈 coerente col 9735\n    ], sk);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/nostr.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/zaps.ts":
/*!*********************!*\
  !*** ./lib/zaps.ts ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   zapPayment: function() { return /* binding */ zapPayment; }\n/* harmony export */ });\n/* harmony import */ var _nostr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nostr */ \"(app-pages-browser)/./lib/nostr.ts\");\n\nasync function zapPayment(payerNpub, receiverNpub, amount, memo, contentId, sk // 👈 secret key per firmare lo zapReceipt\n) {\n    // ⚡ 1. crea invoice su LND\n    const invoiceRes = await fetch(\"/api/create-invoice\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            receiverId: receiverNpub,\n            amount,\n            memo\n        })\n    }).then((r)=>r.json());\n    if (!invoiceRes.payment_request) {\n        throw new Error(\"Errore creazione invoice: \" + JSON.stringify(invoiceRes));\n    }\n    const bolt11 = invoiceRes.payment_request;\n    // ⚡ 2. genera ZapRequest\n    const zapRequest = (0,_nostr__WEBPACK_IMPORTED_MODULE_0__.createZapRequest)({\n        senderPubkey: payerNpub,\n        receiverPubkey: receiverNpub,\n        amount\n    });\n    await (0,_nostr__WEBPACK_IMPORTED_MODULE_0__.publishEvent)(zapRequest);\n    // ⚡ 3. paga l’invoice\n    const payRes = await fetch(\"/api/pay-invoice\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            payerId: payerNpub,\n            paymentRequest: bolt11\n        })\n    }).then((r)=>r.json());\n    if (payRes.payment_error || payRes.error) {\n        throw new Error(\"Pagamento fallito: \" + (payRes.payment_error || payRes.error));\n    }\n    // ⚡ 4. genera ZapReceipt usando createEvent (firma inclusa)\n    const zapReceipt = (0,_nostr__WEBPACK_IMPORTED_MODULE_0__.createZapReceipt)({\n        receiverPubkey: receiverNpub,\n        senderPubkey: payerNpub,\n        amount,\n        zapRequestId: contentId || zapRequest.id,\n        sk\n    });\n    await (0,_nostr__WEBPACK_IMPORTED_MODULE_0__.publishEvent)(zapReceipt);\n    // 🔢 aggiorna subito il counter\n    let purchases = 0;\n    if (contentId) {\n        purchases = await countPurchases(contentId);\n        console.log(\"\\uD83D\\uDD22 Acquisti totali aggiornati per \".concat(contentId, \":\"), purchases);\n    }\n    // 📝 5. salva in localStorage\n    if (true) {\n        const existing = JSON.parse(localStorage.getItem(\"zapHistory\") || \"[]\");\n        existing.unshift({\n            time: Date.now(),\n            zapRequest,\n            zapReceipt\n        });\n        localStorage.setItem(\"zapHistory\", JSON.stringify(existing));\n    }\n    return {\n        zapRequest,\n        zapReceipt,\n        purchases\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi96YXBzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlFO0FBUWxFLGVBQWVHLFdBQ2xCQyxTQUFpQixFQUNqQkMsWUFBb0IsRUFDcEJDLE1BQWMsRUFDZEMsSUFBWSxFQUNaQyxTQUFrQixFQUNsQkMsR0FBa0IsMENBQTBDO0FBQTdDO0lBRWYsMkJBQTJCO0lBQzNCLE1BQU1DLGFBQWEsTUFBTUMsTUFBTSx1QkFBdUI7UUFDbERDLFFBQVE7UUFDUkMsU0FBUztZQUFFLGdCQUFnQjtRQUFtQjtRQUM5Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQUVDLFlBQVlaO1lBQWNDO1lBQVFDO1FBQUs7SUFDbEUsR0FBR1csSUFBSSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxJQUFJO0lBRW5CLElBQUksQ0FBQ1YsV0FBV1csZUFBZSxFQUFFO1FBQzdCLE1BQU0sSUFBSUMsTUFBTSwrQkFBK0JQLEtBQUtDLFNBQVMsQ0FBQ047SUFDbEU7SUFDQSxNQUFNYSxTQUFTYixXQUFXVyxlQUFlO0lBRXpDLHlCQUF5QjtJQUN6QixNQUFNRyxhQUFhdkIsd0RBQWdCQSxDQUFDO1FBQ2hDd0IsY0FBY3JCO1FBQ2RzQixnQkFBZ0JyQjtRQUNoQkM7SUFDSjtJQUNBLE1BQU1OLG9EQUFZQSxDQUFDd0I7SUFFbkIsc0JBQXNCO0lBQ3RCLE1BQU1HLFNBQVMsTUFBTWhCLE1BQU0sb0JBQW9CO1FBQzNDQyxRQUFRO1FBQ1JDLFNBQVM7WUFBRSxnQkFBZ0I7UUFBbUI7UUFDOUNDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztZQUFFWSxTQUFTeEI7WUFBV3lCLGdCQUFnQk47UUFBTztJQUN0RSxHQUFHTCxJQUFJLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLElBQUk7SUFFbkIsSUFBSU8sT0FBT0csYUFBYSxJQUFJSCxPQUFPSSxLQUFLLEVBQUU7UUFDdEMsTUFBTSxJQUFJVCxNQUFNLHdCQUF5QkssQ0FBQUEsT0FBT0csYUFBYSxJQUFJSCxPQUFPSSxLQUFLO0lBQ2pGO0lBRUEsNERBQTREO0lBQzVELE1BQU1DLGFBQWE5Qix3REFBZ0JBLENBQUM7UUFDaEN3QixnQkFBZ0JyQjtRQUNoQm9CLGNBQWNyQjtRQUNkRTtRQUNBMkIsY0FBY3pCLGFBQWFnQixXQUFXVSxFQUFFO1FBQ3hDekI7SUFDSjtJQUVBLE1BQU1ULG9EQUFZQSxDQUFDZ0M7SUFFbkIsZ0NBQWdDO0lBQ2hDLElBQUlHLFlBQVk7SUFDaEIsSUFBSTNCLFdBQVc7UUFDWDJCLFlBQVksTUFBTUMsZUFBZTVCO1FBQ2pDNkIsUUFBUUMsR0FBRyxDQUFDLCtDQUErQyxPQUFWOUIsV0FBVSxNQUFJMkI7SUFDbkU7SUFFQSw4QkFBOEI7SUFDOUIsSUFBSSxJQUE2QixFQUFFO1FBQy9CLE1BQU1JLFdBQVd4QixLQUFLeUIsS0FBSyxDQUFDQyxhQUFhQyxPQUFPLENBQUMsaUJBQWlCO1FBQ2xFSCxTQUFTSSxPQUFPLENBQUM7WUFBRUMsTUFBTUMsS0FBS0MsR0FBRztZQUFJdEI7WUFBWVE7UUFBVztRQUM1RFMsYUFBYU0sT0FBTyxDQUFDLGNBQWNoQyxLQUFLQyxTQUFTLENBQUN1QjtJQUN0RDtJQUVBLE9BQU87UUFBRWY7UUFBWVE7UUFBWUc7SUFBVTtBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvemFwcy50cz9jMTNiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cHVibGlzaEV2ZW50LCBjcmVhdGVaYXBSZXF1ZXN0LCBjcmVhdGVaYXBSZWNlaXB0fSBmcm9tIFwiLi9ub3N0clwiO1xyXG5cclxuaW50ZXJmYWNlIFphcFBheW1lbnRSZXN1bHQge1xyXG4gICAgemFwUmVxdWVzdDogYW55O1xyXG4gICAgemFwUmVjZWlwdDogYW55O1xyXG4gICAgcHVyY2hhc2VzOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB6YXBQYXltZW50KFxyXG4gICAgcGF5ZXJOcHViOiBzdHJpbmcsXHJcbiAgICByZWNlaXZlck5wdWI6IHN0cmluZyxcclxuICAgIGFtb3VudDogbnVtYmVyLFxyXG4gICAgbWVtbzogc3RyaW5nLFxyXG4gICAgY29udGVudElkPzogc3RyaW5nLFxyXG4gICAgc2s/OiBVaW50OEFycmF5ICAgLy8g8J+RiCBzZWNyZXQga2V5IHBlciBmaXJtYXJlIGxvIHphcFJlY2VpcHRcclxuKTogUHJvbWlzZTxaYXBQYXltZW50UmVzdWx0PiB7XHJcbiAgICAvLyDimqEgMS4gY3JlYSBpbnZvaWNlIHN1IExORFxyXG4gICAgY29uc3QgaW52b2ljZVJlcyA9IGF3YWl0IGZldGNoKFwiL2FwaS9jcmVhdGUtaW52b2ljZVwiLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBoZWFkZXJzOiB7IFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyByZWNlaXZlcklkOiByZWNlaXZlck5wdWIsIGFtb3VudCwgbWVtbyB9KSxcclxuICAgIH0pLnRoZW4ociA9PiByLmpzb24oKSk7XHJcblxyXG4gICAgaWYgKCFpbnZvaWNlUmVzLnBheW1lbnRfcmVxdWVzdCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yZSBjcmVhemlvbmUgaW52b2ljZTogXCIgKyBKU09OLnN0cmluZ2lmeShpbnZvaWNlUmVzKSk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBib2x0MTEgPSBpbnZvaWNlUmVzLnBheW1lbnRfcmVxdWVzdDtcclxuXHJcbiAgICAvLyDimqEgMi4gZ2VuZXJhIFphcFJlcXVlc3RcclxuICAgIGNvbnN0IHphcFJlcXVlc3QgPSBjcmVhdGVaYXBSZXF1ZXN0KHtcclxuICAgICAgICBzZW5kZXJQdWJrZXk6IHBheWVyTnB1YixcclxuICAgICAgICByZWNlaXZlclB1YmtleTogcmVjZWl2ZXJOcHViLFxyXG4gICAgICAgIGFtb3VudCxcclxuICAgIH0pO1xyXG4gICAgYXdhaXQgcHVibGlzaEV2ZW50KHphcFJlcXVlc3QpO1xyXG5cclxuICAgIC8vIOKaoSAzLiBwYWdhIGzigJlpbnZvaWNlXHJcbiAgICBjb25zdCBwYXlSZXMgPSBhd2FpdCBmZXRjaChcIi9hcGkvcGF5LWludm9pY2VcIiwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgcGF5ZXJJZDogcGF5ZXJOcHViLCBwYXltZW50UmVxdWVzdDogYm9sdDExIH0pLFxyXG4gICAgfSkudGhlbihyID0+IHIuanNvbigpKTtcclxuXHJcbiAgICBpZiAocGF5UmVzLnBheW1lbnRfZXJyb3IgfHwgcGF5UmVzLmVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGFnYW1lbnRvIGZhbGxpdG86IFwiICsgKHBheVJlcy5wYXltZW50X2Vycm9yIHx8IHBheVJlcy5lcnJvcikpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOKaoSA0LiBnZW5lcmEgWmFwUmVjZWlwdCB1c2FuZG8gY3JlYXRlRXZlbnQgKGZpcm1hIGluY2x1c2EpXHJcbiAgICBjb25zdCB6YXBSZWNlaXB0ID0gY3JlYXRlWmFwUmVjZWlwdCh7XHJcbiAgICAgICAgcmVjZWl2ZXJQdWJrZXk6IHJlY2VpdmVyTnB1YixcclxuICAgICAgICBzZW5kZXJQdWJrZXk6IHBheWVyTnB1YixcclxuICAgICAgICBhbW91bnQsXHJcbiAgICAgICAgemFwUmVxdWVzdElkOiBjb250ZW50SWQgfHwgemFwUmVxdWVzdC5pZCxcclxuICAgICAgICBzayxcclxuICAgIH0pO1xyXG5cclxuICAgIGF3YWl0IHB1Ymxpc2hFdmVudCh6YXBSZWNlaXB0KTtcclxuXHJcbiAgICAvLyDwn5SiIGFnZ2lvcm5hIHN1Yml0byBpbCBjb3VudGVyXHJcbiAgICBsZXQgcHVyY2hhc2VzID0gMDtcclxuICAgIGlmIChjb250ZW50SWQpIHtcclxuICAgICAgICBwdXJjaGFzZXMgPSBhd2FpdCBjb3VudFB1cmNoYXNlcyhjb250ZW50SWQpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGDwn5SiIEFjcXVpc3RpIHRvdGFsaSBhZ2dpb3JuYXRpIHBlciAke2NvbnRlbnRJZH06YCwgcHVyY2hhc2VzKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDwn5OdIDUuIHNhbHZhIGluIGxvY2FsU3RvcmFnZVxyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgICBjb25zdCBleGlzdGluZyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ6YXBIaXN0b3J5XCIpIHx8IFwiW11cIik7XHJcbiAgICAgICAgZXhpc3RpbmcudW5zaGlmdCh7IHRpbWU6IERhdGUubm93KCksIHphcFJlcXVlc3QsIHphcFJlY2VpcHQgfSk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ6YXBIaXN0b3J5XCIsIEpTT04uc3RyaW5naWZ5KGV4aXN0aW5nKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHsgemFwUmVxdWVzdCwgemFwUmVjZWlwdCwgcHVyY2hhc2VzIH07XHJcbn1cclxuIl0sIm5hbWVzIjpbInB1Ymxpc2hFdmVudCIsImNyZWF0ZVphcFJlcXVlc3QiLCJjcmVhdGVaYXBSZWNlaXB0IiwiemFwUGF5bWVudCIsInBheWVyTnB1YiIsInJlY2VpdmVyTnB1YiIsImFtb3VudCIsIm1lbW8iLCJjb250ZW50SWQiLCJzayIsImludm9pY2VSZXMiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInJlY2VpdmVySWQiLCJ0aGVuIiwiciIsImpzb24iLCJwYXltZW50X3JlcXVlc3QiLCJFcnJvciIsImJvbHQxMSIsInphcFJlcXVlc3QiLCJzZW5kZXJQdWJrZXkiLCJyZWNlaXZlclB1YmtleSIsInBheVJlcyIsInBheWVySWQiLCJwYXltZW50UmVxdWVzdCIsInBheW1lbnRfZXJyb3IiLCJlcnJvciIsInphcFJlY2VpcHQiLCJ6YXBSZXF1ZXN0SWQiLCJpZCIsInB1cmNoYXNlcyIsImNvdW50UHVyY2hhc2VzIiwiY29uc29sZSIsImxvZyIsImV4aXN0aW5nIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwidW5zaGlmdCIsInRpbWUiLCJEYXRlIiwibm93Iiwic2V0SXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/zaps.ts\n"));

/***/ })

});