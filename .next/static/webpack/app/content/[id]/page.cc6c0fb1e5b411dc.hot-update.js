"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/content/[id]/page",{

/***/ "(app-pages-browser)/./lib/zaps.ts":
/*!*********************!*\
  !*** ./lib/zaps.ts ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   zapPayment: function() { return /* binding */ zapPayment; }\n/* harmony export */ });\n/* harmony import */ var _nostr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nostr */ \"(app-pages-browser)/./lib/nostr.ts\");\n\nasync function zapPayment(payerNpub, receiverNpub, amount, memo, contentId // üëà passo opzionale: id del contenuto (post.id)\n) {\n    // ‚ö° 1. crea invoice su LND del receiver\n    const invoiceRes = await fetch(\"/api/create-invoice\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            receiverId: receiverNpub,\n            amount,\n            memo\n        })\n    }).then((r)=>r.json());\n    if (!invoiceRes.payment_request) {\n        throw new Error(\"Errore creazione invoice: \" + JSON.stringify(invoiceRes));\n    }\n    const bolt11 = invoiceRes.payment_request;\n    // ‚ö° 2. genera ZapRequest\n    const zapRequest = (0,_nostr__WEBPACK_IMPORTED_MODULE_0__.createZapRequest)({\n        senderPubkey: payerNpub,\n        receiverPubkey: receiverNpub,\n        amount\n    });\n    await (0,_nostr__WEBPACK_IMPORTED_MODULE_0__.publishEvent)(zapRequest);\n    // ‚ö° 3. paga l‚Äôinvoice\n    const payRes = await fetch(\"/api/pay-invoice\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            payerId: payerNpub,\n            paymentRequest: bolt11\n        })\n    }).then((r)=>r.json());\n    if (payRes.payment_error || payRes.error) {\n        throw new Error(\"Pagamento fallito: \" + (payRes.payment_error || payRes.error));\n    }\n    // ‚ö° 4. genera ZapReceipt con i TAG corretti\n    const zapReceipt = {\n        kind: 9735,\n        created_at: Math.floor(Date.now() / 1000),\n        pubkey: receiverNpub,\n        content: \"Zap receipt of \".concat(amount, \" sats\"),\n        tags: [\n            [\n                \"p\",\n                receiverNpub\n            ],\n            [\n                \"from\",\n                payerNpub\n            ],\n            [\n                \"amount\",\n                amount.toString()\n            ],\n            [\n                \"e\",\n                contentId || zapRequest.id\n            ]\n        ]\n    };\n    await (0,_nostr__WEBPACK_IMPORTED_MODULE_0__.publishEvent)(zapReceipt);\n    // üî¢ aggiorna subito counter (se c‚Äô√® un contenuto associato)\n    let purchases = 0;\n    if (contentId) {\n        purchases = await (0,_nostr__WEBPACK_IMPORTED_MODULE_0__.countPurchases)(contentId);\n        console.log(\"\\uD83D\\uDD22 Acquisti totali aggiornati per \".concat(contentId, \":\"), purchases);\n    }\n    // üìù 5. salva in localStorage\n    if (true) {\n        const existing = JSON.parse(localStorage.getItem(\"zapHistory\") || \"[]\");\n        existing.unshift({\n            time: Date.now(),\n            zapRequest,\n            zapReceipt\n        });\n        localStorage.setItem(\"zapHistory\", JSON.stringify(existing));\n    }\n    return {\n        zapRequest,\n        zapReceipt,\n        purchases\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi96YXBzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlFO0FBUWxFLGVBQWVHLFdBQ2xCQyxTQUFpQixFQUNqQkMsWUFBb0IsRUFDcEJDLE1BQWMsRUFDZEMsSUFBWSxFQUNaQyxVQUFtQixpREFBaUQ7QUFBbEQ7SUFFbEIsd0NBQXdDO0lBQ3hDLE1BQU1DLGFBQWEsTUFBTUMsTUFBTSx1QkFBdUI7UUFDbERDLFFBQVE7UUFDUkMsU0FBUztZQUFFLGdCQUFnQjtRQUFtQjtRQUM5Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQ2pCQyxZQUFZWDtZQUNaQztZQUNBQztRQUNKO0lBQ0osR0FBR1UsSUFBSSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxJQUFJO0lBRW5CLElBQUksQ0FBQ1YsV0FBV1csZUFBZSxFQUFFO1FBQzdCLE1BQU0sSUFBSUMsTUFBTSwrQkFBK0JQLEtBQUtDLFNBQVMsQ0FBQ047SUFDbEU7SUFFQSxNQUFNYSxTQUFTYixXQUFXVyxlQUFlO0lBRXpDLHlCQUF5QjtJQUN6QixNQUFNRyxhQUFhdkIsd0RBQWdCQSxDQUFDO1FBQ2hDd0IsY0FBY3BCO1FBQ2RxQixnQkFBZ0JwQjtRQUNoQkM7SUFDSjtJQUNBLE1BQU1MLG9EQUFZQSxDQUFDc0I7SUFFbkIsc0JBQXNCO0lBQ3RCLE1BQU1HLFNBQVMsTUFBTWhCLE1BQU0sb0JBQW9CO1FBQzNDQyxRQUFRO1FBQ1JDLFNBQVM7WUFBRSxnQkFBZ0I7UUFBbUI7UUFDOUNDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztZQUNqQlksU0FBU3ZCO1lBQ1R3QixnQkFBZ0JOO1FBQ3BCO0lBQ0osR0FBR0wsSUFBSSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxJQUFJO0lBRW5CLElBQUlPLE9BQU9HLGFBQWEsSUFBSUgsT0FBT0ksS0FBSyxFQUFFO1FBQ3RDLE1BQU0sSUFBSVQsTUFBTSx3QkFBeUJLLENBQUFBLE9BQU9HLGFBQWEsSUFBSUgsT0FBT0ksS0FBSztJQUNqRjtJQUVBLDRDQUE0QztJQUM1QyxNQUFNQyxhQUFhO1FBQ2ZDLE1BQU07UUFDTkMsWUFBWUMsS0FBS0MsS0FBSyxDQUFDQyxLQUFLQyxHQUFHLEtBQUs7UUFDcENDLFFBQVFqQztRQUNSa0MsU0FBUyxrQkFBeUIsT0FBUGpDLFFBQU87UUFDbENrQyxNQUFNO1lBQ0Y7Z0JBQUM7Z0JBQUtuQzthQUFhO1lBQ25CO2dCQUFDO2dCQUFRRDthQUFVO1lBQ25CO2dCQUFDO2dCQUFVRSxPQUFPbUMsUUFBUTthQUFHO1lBQzdCO2dCQUFDO2dCQUFLakMsYUFBYWUsV0FBV21CLEVBQUU7YUFBQztTQUNwQztJQUNMO0lBQ0EsTUFBTXpDLG9EQUFZQSxDQUFDOEI7SUFFbkIsNkRBQTZEO0lBQzdELElBQUlZLFlBQVk7SUFDaEIsSUFBSW5DLFdBQVc7UUFDWG1DLFlBQVksTUFBTXpDLHNEQUFjQSxDQUFDTTtRQUNqQ29DLFFBQVFDLEdBQUcsQ0FBQywrQ0FBK0MsT0FBVnJDLFdBQVUsTUFBSW1DO0lBQ25FO0lBRUEsOEJBQThCO0lBQzlCLElBQUksSUFBNkIsRUFBRTtRQUMvQixNQUFNRyxXQUFXaEMsS0FBS2lDLEtBQUssQ0FBQ0MsYUFBYUMsT0FBTyxDQUFDLGlCQUFpQjtRQUNsRUgsU0FBU0ksT0FBTyxDQUFDO1lBQUVDLE1BQU1mLEtBQUtDLEdBQUc7WUFBSWQ7WUFBWVE7UUFBVztRQUM1RGlCLGFBQWFJLE9BQU8sQ0FBQyxjQUFjdEMsS0FBS0MsU0FBUyxDQUFDK0I7SUFDdEQ7SUFFQSxPQUFPO1FBQUV2QjtRQUFZUTtRQUFZWTtJQUFVO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi96YXBzLnRzP2MxM2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlWmFwUmVxdWVzdCwgcHVibGlzaEV2ZW50LCBjb3VudFB1cmNoYXNlcyB9IGZyb20gXCIuL25vc3RyXCI7XHJcblxyXG5pbnRlcmZhY2UgWmFwUGF5bWVudFJlc3VsdCB7XHJcbiAgICB6YXBSZXF1ZXN0OiBhbnk7XHJcbiAgICB6YXBSZWNlaXB0OiBhbnk7XHJcbiAgICBwdXJjaGFzZXM6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHphcFBheW1lbnQoXHJcbiAgICBwYXllck5wdWI6IHN0cmluZyxcclxuICAgIHJlY2VpdmVyTnB1Yjogc3RyaW5nLFxyXG4gICAgYW1vdW50OiBudW1iZXIsXHJcbiAgICBtZW1vOiBzdHJpbmcsXHJcbiAgICBjb250ZW50SWQ/OiBzdHJpbmcgLy8g8J+RiCBwYXNzbyBvcHppb25hbGU6IGlkIGRlbCBjb250ZW51dG8gKHBvc3QuaWQpXHJcbik6IFByb21pc2U8WmFwUGF5bWVudFJlc3VsdD4ge1xyXG4gICAgLy8g4pqhIDEuIGNyZWEgaW52b2ljZSBzdSBMTkQgZGVsIHJlY2VpdmVyXHJcbiAgICBjb25zdCBpbnZvaWNlUmVzID0gYXdhaXQgZmV0Y2goXCIvYXBpL2NyZWF0ZS1pbnZvaWNlXCIsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIHJlY2VpdmVySWQ6IHJlY2VpdmVyTnB1YixcclxuICAgICAgICAgICAgYW1vdW50LFxyXG4gICAgICAgICAgICBtZW1vLFxyXG4gICAgICAgIH0pLFxyXG4gICAgfSkudGhlbihyID0+IHIuanNvbigpKTtcclxuXHJcbiAgICBpZiAoIWludm9pY2VSZXMucGF5bWVudF9yZXF1ZXN0KSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3JlIGNyZWF6aW9uZSBpbnZvaWNlOiBcIiArIEpTT04uc3RyaW5naWZ5KGludm9pY2VSZXMpKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBib2x0MTEgPSBpbnZvaWNlUmVzLnBheW1lbnRfcmVxdWVzdDtcclxuXHJcbiAgICAvLyDimqEgMi4gZ2VuZXJhIFphcFJlcXVlc3RcclxuICAgIGNvbnN0IHphcFJlcXVlc3QgPSBjcmVhdGVaYXBSZXF1ZXN0KHtcclxuICAgICAgICBzZW5kZXJQdWJrZXk6IHBheWVyTnB1YixcclxuICAgICAgICByZWNlaXZlclB1YmtleTogcmVjZWl2ZXJOcHViLFxyXG4gICAgICAgIGFtb3VudCxcclxuICAgIH0pO1xyXG4gICAgYXdhaXQgcHVibGlzaEV2ZW50KHphcFJlcXVlc3QpO1xyXG5cclxuICAgIC8vIOKaoSAzLiBwYWdhIGzigJlpbnZvaWNlXHJcbiAgICBjb25zdCBwYXlSZXMgPSBhd2FpdCBmZXRjaChcIi9hcGkvcGF5LWludm9pY2VcIiwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgcGF5ZXJJZDogcGF5ZXJOcHViLFxyXG4gICAgICAgICAgICBwYXltZW50UmVxdWVzdDogYm9sdDExLFxyXG4gICAgICAgIH0pLFxyXG4gICAgfSkudGhlbihyID0+IHIuanNvbigpKTtcclxuXHJcbiAgICBpZiAocGF5UmVzLnBheW1lbnRfZXJyb3IgfHwgcGF5UmVzLmVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGFnYW1lbnRvIGZhbGxpdG86IFwiICsgKHBheVJlcy5wYXltZW50X2Vycm9yIHx8IHBheVJlcy5lcnJvcikpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOKaoSA0LiBnZW5lcmEgWmFwUmVjZWlwdCBjb24gaSBUQUcgY29ycmV0dGlcclxuICAgIGNvbnN0IHphcFJlY2VpcHQgPSB7XHJcbiAgICAgICAga2luZDogOTczNSxcclxuICAgICAgICBjcmVhdGVkX2F0OiBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSxcclxuICAgICAgICBwdWJrZXk6IHJlY2VpdmVyTnB1YixcclxuICAgICAgICBjb250ZW50OiBgWmFwIHJlY2VpcHQgb2YgJHthbW91bnR9IHNhdHNgLFxyXG4gICAgICAgIHRhZ3M6IFtcclxuICAgICAgICAgICAgW1wicFwiLCByZWNlaXZlck5wdWJdLCAgICAgICAgIC8vIGRlc3RpbmF0YXJpb1xyXG4gICAgICAgICAgICBbXCJmcm9tXCIsIHBheWVyTnB1Yl0sICAgICAgICAgLy8gbWl0dGVudGVcclxuICAgICAgICAgICAgW1wiYW1vdW50XCIsIGFtb3VudC50b1N0cmluZygpXSxcclxuICAgICAgICAgICAgW1wiZVwiLCBjb250ZW50SWQgfHwgemFwUmVxdWVzdC5pZF0sIC8vIGlkIGNvbnRlbnV0byBvIGZhbGxiYWNrIHN1IHphcFJlcXVlc3RcclxuICAgICAgICBdLFxyXG4gICAgfTtcclxuICAgIGF3YWl0IHB1Ymxpc2hFdmVudCh6YXBSZWNlaXB0KTtcclxuXHJcbiAgICAvLyDwn5SiIGFnZ2lvcm5hIHN1Yml0byBjb3VudGVyIChzZSBj4oCZw6ggdW4gY29udGVudXRvIGFzc29jaWF0bylcclxuICAgIGxldCBwdXJjaGFzZXMgPSAwO1xyXG4gICAgaWYgKGNvbnRlbnRJZCkge1xyXG4gICAgICAgIHB1cmNoYXNlcyA9IGF3YWl0IGNvdW50UHVyY2hhc2VzKGNvbnRlbnRJZCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coYPCflKIgQWNxdWlzdGkgdG90YWxpIGFnZ2lvcm5hdGkgcGVyICR7Y29udGVudElkfTpgLCBwdXJjaGFzZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIPCfk50gNS4gc2FsdmEgaW4gbG9jYWxTdG9yYWdlXHJcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgIGNvbnN0IGV4aXN0aW5nID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInphcEhpc3RvcnlcIikgfHwgXCJbXVwiKTtcclxuICAgICAgICBleGlzdGluZy51bnNoaWZ0KHsgdGltZTogRGF0ZS5ub3coKSwgemFwUmVxdWVzdCwgemFwUmVjZWlwdCB9KTtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInphcEhpc3RvcnlcIiwgSlNPTi5zdHJpbmdpZnkoZXhpc3RpbmcpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyB6YXBSZXF1ZXN0LCB6YXBSZWNlaXB0LCBwdXJjaGFzZXMgfTtcclxufVxyXG4iXSwibmFtZXMiOlsiY3JlYXRlWmFwUmVxdWVzdCIsInB1Ymxpc2hFdmVudCIsImNvdW50UHVyY2hhc2VzIiwiemFwUGF5bWVudCIsInBheWVyTnB1YiIsInJlY2VpdmVyTnB1YiIsImFtb3VudCIsIm1lbW8iLCJjb250ZW50SWQiLCJpbnZvaWNlUmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZWNlaXZlcklkIiwidGhlbiIsInIiLCJqc29uIiwicGF5bWVudF9yZXF1ZXN0IiwiRXJyb3IiLCJib2x0MTEiLCJ6YXBSZXF1ZXN0Iiwic2VuZGVyUHVia2V5IiwicmVjZWl2ZXJQdWJrZXkiLCJwYXlSZXMiLCJwYXllcklkIiwicGF5bWVudFJlcXVlc3QiLCJwYXltZW50X2Vycm9yIiwiZXJyb3IiLCJ6YXBSZWNlaXB0Iiwia2luZCIsImNyZWF0ZWRfYXQiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwicHVia2V5IiwiY29udGVudCIsInRhZ3MiLCJ0b1N0cmluZyIsImlkIiwicHVyY2hhc2VzIiwiY29uc29sZSIsImxvZyIsImV4aXN0aW5nIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwidW5zaGlmdCIsInRpbWUiLCJzZXRJdGVtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/zaps.ts\n"));

/***/ })

});