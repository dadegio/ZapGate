"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/content/[id]/page",{

/***/ "(app-pages-browser)/./lib/nostr.ts":
/*!**********************!*\
  !*** ./lib/nostr.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   countActivePurchases: function() { return /* binding */ countActivePurchases; },\n/* harmony export */   countPurchases: function() { return /* binding */ countPurchases; },\n/* harmony export */   createDeleteEvent: function() { return /* binding */ createDeleteEvent; },\n/* harmony export */   createEvent: function() { return /* binding */ createEvent; },\n/* harmony export */   createUnsubscribeEvent: function() { return /* binding */ createUnsubscribeEvent; },\n/* harmony export */   createZapReceipt: function() { return /* binding */ createZapReceipt; },\n/* harmony export */   createZapRequest: function() { return /* binding */ createZapRequest; },\n/* harmony export */   generateSecretKey: function() { return /* binding */ generateSecretKey; },\n/* harmony export */   pool: function() { return /* binding */ pool; },\n/* harmony export */   publishEvent: function() { return /* binding */ publishEvent; }\n/* harmony export */ });\n/* harmony import */ var nostr_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nostr-tools */ \"(app-pages-browser)/./node_modules/nostr-tools/lib/esm/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./lib/config.ts\");\n\n\n// Pool condiviso\nconst pool = new nostr_tools__WEBPACK_IMPORTED_MODULE_0__.SimplePool();\n// ðŸ”— Utility: array di soli URL (stringhe)\nconst relayUrls = _config__WEBPACK_IMPORTED_MODULE_1__.RELAYS.map((r)=>r.url);\n/**\r\n * Utils: Uint8Array -> hex string\r\n */ function toHex(bytes) {\n    return Array.from(bytes).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\r\n * Genera una secret key random (Uint8Array)\r\n */ function generateSecretKey() {\n    const sk = new Uint8Array(32);\n    crypto.getRandomValues(sk);\n    return sk;\n}\n/**\r\n * Crea e firma un evento Nostr\r\n */ function createEvent(kind, content) {\n    let tags = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], sk = arguments.length > 3 ? arguments[3] : void 0;\n    const secret = sk || generateSecretKey();\n    const skHex = toHex(secret) // âœ… conversione in hex\n    ;\n    const pubkey = (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.getPublicKey)(skHex);\n    const ev = {\n        kind,\n        pubkey,\n        created_at: Math.floor(Date.now() / 1000),\n        tags,\n        content\n    };\n    return {\n        ...ev,\n        id: (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.getEventHash)(ev),\n        sig: (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.signEvent)(ev, skHex)\n    };\n}\n/**\r\n * Crea una Zap Request (kind 9734)\r\n */ function createZapRequest(param) {\n    let { senderPubkey, receiverPubkey, amount, noteId, sk } = param;\n    const tags = [\n        [\n            \"p\",\n            receiverPubkey\n        ],\n        [\n            \"amount\",\n            String(amount)\n        ],\n        [\n            \"from\",\n            senderPubkey\n        ]\n    ];\n    if (noteId) tags.push([\n        \"e\",\n        noteId\n    ]);\n    return createEvent(9734, \"Zap request of \".concat(amount, \" sats\"), tags, sk);\n}\n/**\r\n * Crea una Zap Receipt (kind 9735)\r\n */ function createZapReceipt(param) {\n    let { receiverPubkey, senderPubkey, amount, zapRequestId, sk } = param;\n    const tags = [\n        [\n            \"p\",\n            receiverPubkey\n        ],\n        [\n            \"amount\",\n            String(amount)\n        ],\n        [\n            \"e\",\n            zapRequestId\n        ],\n        [\n            \"payer\",\n            senderPubkey\n        ]\n    ];\n    return createEvent(9735, \"Zap receipt of \".concat(amount, \" sats\"), tags, sk);\n}\n/**\r\n * Pubblica un evento su tutti i relay\r\n */ async function publishEvent(ev) {\n    let signed = ev;\n    // se ho NIP-07 uso quello\n    if (window.nostr) {\n        signed = await window.nostr.signEvent(ev);\n    } else {\n        console.warn(\"âš  Nessun provider nostr (NIP-07), uso sk random\");\n        // fallback: firma locale (âš  se vuoi usa la tua sk qui)\n        signed.sig = (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.signEvent)(ev, \"\");\n    }\n    // âœ… ora passo solo string[]\n    const pubs = pool.publish(relayUrls, signed);\n    await Promise.all(pubs);\n}\n// ðŸ”¢ Conta il numero di zapReceipt (9735) legati a un contenuto\nasync function countPurchases(itemId) {\n    let relays = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _config__WEBPACK_IMPORTED_MODULE_1__.RELAYS.map((r)=>r.url);\n    return new Promise((resolve)=>{\n        let count = 0;\n        const sub = pool.sub(relays, [\n            {\n                kinds: [\n                    9735\n                ],\n                \"#e\": [\n                    itemId\n                ]\n            }\n        ]);\n        sub.on(\"event\", (event)=>{\n            console.log(\"\\uD83D\\uDCE9 Zap trovato:\", event);\n            count++;\n        });\n        sub.on(\"eose\", ()=>{\n            sub.unsub();\n            resolve(count);\n        });\n    });\n}\nasync function countActivePurchases(postId, relays) {\n    return new Promise((resolve)=>{\n        const lastEvent = {};\n        const sub = pool.sub(relays, [\n            {\n                kinds: [\n                    9735,\n                    9736\n                ],\n                \"#e\": [\n                    postId\n                ]\n            }\n        ]);\n        sub.on(\"event\", (event)=>{\n            var _event_tags_find, _event_tags_find1;\n            // cerchiamo chi ha fatto l'azione: puÃ² essere \"from\" oppure \"payer\"\n            const payer = ((_event_tags_find = event.tags.find((t)=>t[0] === \"from\")) === null || _event_tags_find === void 0 ? void 0 : _event_tags_find[1]) || ((_event_tags_find1 = event.tags.find((t)=>t[0] === \"payer\")) === null || _event_tags_find1 === void 0 ? void 0 : _event_tags_find1[1]);\n            if (!payer) return;\n            const prev = lastEvent[payer];\n            if (!prev || event.created_at > prev.created_at) {\n                lastEvent[payer] = event;\n            }\n        });\n        sub.on(\"eose\", ()=>{\n            // utenti il cui ultimo evento Ã¨ un acquisto (9735)\n            const stillActive = Object.values(lastEvent).filter((ev)=>ev.kind === 9735);\n            resolve(stillActive.length);\n            sub.unsub();\n        });\n    });\n}\n/**\r\n * Crea un evento di eliminazione (kind 5)\r\n */ function createDeleteEvent(eventId) {\n    let reason = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"deleted\", sk = arguments.length > 2 ? arguments[2] : void 0;\n    const tags = [\n        [\n            \"e\",\n            eventId\n        ],\n        [\n            \"reason\",\n            reason\n        ]\n    ];\n    return createEvent(5, reason, tags, sk);\n}\n/**\r\n * Crea un evento di unsubscribe (kind 9736 personalizzato)\r\n */ function createUnsubscribeEvent(postId, userPubkey, sk) {\n    return createEvent(9736, \"Unsubscribe from post \".concat(postId), [\n        [\n            \"e\",\n            postId\n        ],\n        [\n            \"payer\",\n            userPubkey\n        ] // âœ… allineato\n    ], sk);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU07WUFDN0IsSUFBSSxDQUFDRyxRQUFRVCxNQUFNbEMsVUFBVSxHQUFHMkMsS0FBSzNDLFVBQVUsRUFBRTtnQkFDN0N1QyxTQUFTLENBQUNDLE1BQU0sR0FBR047WUFDdkI7UUFDSjtRQUVBSCxJQUFJRSxFQUFFLENBQUMsUUFBUTtZQUNYLG1EQUFtRDtZQUNuRCxNQUFNVyxjQUFjQyxPQUFPQyxNQUFNLENBQUNQLFdBQVdRLE1BQU0sQ0FDL0MsQ0FBQ2hELEtBQU9BLEdBQUdOLElBQUksS0FBSztZQUV4Qm9DLFFBQVFlLFlBQVlJLE1BQU07WUFDMUJqQixJQUFJSyxLQUFLO1FBQ2I7SUFDSjtBQUNKO0FBR0E7O0NBRUMsR0FDTSxTQUFTYSxrQkFDWkMsT0FBZTtRQUNmQyxTQUFBQSxpRUFBUyxXQUNUL0Q7SUFFQSxNQUFNTyxPQUFPO1FBQUM7WUFBQztZQUFLdUQ7U0FBUTtRQUFFO1lBQUM7WUFBVUM7U0FBTztLQUFDO0lBQ2pELE9BQU8zRCxZQUFZLEdBQUcyRCxRQUFReEQsTUFBTVA7QUFDeEM7QUFFQTs7Q0FFQyxHQUNNLFNBQVNnRSx1QkFDWmQsTUFBYyxFQUNkZSxVQUFrQixFQUNsQmpFLEVBQWU7SUFFZixPQUFPSSxZQUNILE1BQ0EseUJBQWdDLE9BQVA4QyxTQUN6QjtRQUNJO1lBQUM7WUFBS0E7U0FBTztRQUNiO1lBQUM7WUFBU2U7U0FBVyxDQUFHLGNBQWM7S0FDekMsRUFDRGpFO0FBRVIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL25vc3RyLnRzPzUzMjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICAgIFNpbXBsZVBvb2wsXHJcbiAgICBnZXRQdWJsaWNLZXksXHJcbiAgICBnZXRFdmVudEhhc2gsXHJcbiAgICBzaWduRXZlbnQsXHJcbiAgICB0eXBlIEV2ZW50IGFzIE5vc3RyRXZlbnQsXHJcbn0gZnJvbSAnbm9zdHItdG9vbHMnXHJcblxyXG5pbXBvcnQgeyBFdmVudCB9IGZyb20gXCJub3N0ci10b29sc1wiO1xyXG5pbXBvcnQgeyBSRUxBWVMgfSBmcm9tICcuL2NvbmZpZydcclxuXHJcbi8vIFBvb2wgY29uZGl2aXNvXHJcbmV4cG9ydCBjb25zdCBwb29sID0gbmV3IFNpbXBsZVBvb2woKVxyXG5cclxuLy8g8J+UlyBVdGlsaXR5OiBhcnJheSBkaSBzb2xpIFVSTCAoc3RyaW5naGUpXHJcbmNvbnN0IHJlbGF5VXJscyA9IFJFTEFZUy5tYXAociA9PiByLnVybClcclxuXHJcbi8qKlxyXG4gKiBVdGlsczogVWludDhBcnJheSAtPiBoZXggc3RyaW5nXHJcbiAqL1xyXG5mdW5jdGlvbiB0b0hleChieXRlczogVWludDhBcnJheSk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gQXJyYXkuZnJvbShieXRlcylcclxuICAgICAgICAubWFwKGIgPT4gYi50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKSlcclxuICAgICAgICAuam9pbignJylcclxufVxyXG5cclxuLyoqXHJcbiAqIEdlbmVyYSB1bmEgc2VjcmV0IGtleSByYW5kb20gKFVpbnQ4QXJyYXkpXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTZWNyZXRLZXkoKTogVWludDhBcnJheSB7XHJcbiAgICBjb25zdCBzayA9IG5ldyBVaW50OEFycmF5KDMyKVxyXG4gICAgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhzaylcclxuICAgIHJldHVybiBza1xyXG59XHJcblxyXG4vKipcclxuICogQ3JlYSBlIGZpcm1hIHVuIGV2ZW50byBOb3N0clxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUV2ZW50KFxyXG4gICAga2luZDogbnVtYmVyLFxyXG4gICAgY29udGVudDogc3RyaW5nLFxyXG4gICAgdGFnczogc3RyaW5nW11bXSA9IFtdLFxyXG4gICAgc2s/OiBVaW50OEFycmF5XHJcbik6IE5vc3RyRXZlbnQge1xyXG4gICAgY29uc3Qgc2VjcmV0ID0gc2sgfHwgZ2VuZXJhdGVTZWNyZXRLZXkoKVxyXG4gICAgY29uc3Qgc2tIZXggPSB0b0hleChzZWNyZXQpICAgICAgICAgICAgLy8g4pyFIGNvbnZlcnNpb25lIGluIGhleFxyXG4gICAgY29uc3QgcHVia2V5ID0gZ2V0UHVibGljS2V5KHNrSGV4KVxyXG5cclxuICAgIGNvbnN0IGV2ID0ge1xyXG4gICAgICAgIGtpbmQsXHJcbiAgICAgICAgcHVia2V5LFxyXG4gICAgICAgIGNyZWF0ZWRfYXQ6IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApLFxyXG4gICAgICAgIHRhZ3MsXHJcbiAgICAgICAgY29udGVudCxcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIC4uLmV2LFxyXG4gICAgICAgIGlkOiBnZXRFdmVudEhhc2goZXYpLFxyXG4gICAgICAgIHNpZzogc2lnbkV2ZW50KGV2LCBza0hleCksICAgICAgICAgICAvLyDinIUgdXNhIGhleCwgbm9uIFVpbnQ4QXJyYXlcclxuICAgIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWEgdW5hIFphcCBSZXF1ZXN0IChraW5kIDk3MzQpXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlWmFwUmVxdWVzdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW5kZXJQdWJrZXksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNlaXZlclB1YmtleSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFtb3VudCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdGVJZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNrLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OiB7XHJcbiAgICBzZW5kZXJQdWJrZXk6IHN0cmluZ1xyXG4gICAgcmVjZWl2ZXJQdWJrZXk6IHN0cmluZ1xyXG4gICAgYW1vdW50OiBudW1iZXJcclxuICAgIG5vdGVJZD86IHN0cmluZ1xyXG4gICAgc2s/OiBVaW50OEFycmF5XHJcbn0pOiBOb3N0ckV2ZW50IHtcclxuICAgIGNvbnN0IHRhZ3M6IHN0cmluZ1tdW10gPSBbXHJcbiAgICAgICAgWydwJywgcmVjZWl2ZXJQdWJrZXldLFxyXG4gICAgICAgIFsnYW1vdW50JywgU3RyaW5nKGFtb3VudCldLFxyXG4gICAgICAgIFsnZnJvbScsIHNlbmRlclB1YmtleV0sXHJcbiAgICBdXHJcblxyXG4gICAgaWYgKG5vdGVJZCkgdGFncy5wdXNoKFsnZScsIG5vdGVJZF0pXHJcblxyXG4gICAgcmV0dXJuIGNyZWF0ZUV2ZW50KDk3MzQsIGBaYXAgcmVxdWVzdCBvZiAke2Ftb3VudH0gc2F0c2AsIHRhZ3MsIHNrKVxyXG59XHJcblxyXG4vKipcclxuICogQ3JlYSB1bmEgWmFwIFJlY2VpcHQgKGtpbmQgOTczNSlcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVaYXBSZWNlaXB0KHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY2VpdmVyUHVia2V5LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VuZGVyUHVia2V5LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW1vdW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgemFwUmVxdWVzdElkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2ssXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH06IHtcclxuICAgIHJlY2VpdmVyUHVia2V5OiBzdHJpbmdcclxuICAgIHNlbmRlclB1YmtleTogc3RyaW5nXHJcbiAgICBhbW91bnQ6IG51bWJlclxyXG4gICAgemFwUmVxdWVzdElkOiBzdHJpbmdcclxuICAgIHNrPzogVWludDhBcnJheVxyXG59KTogTm9zdHJFdmVudCB7XHJcbiAgICBjb25zdCB0YWdzOiBzdHJpbmdbXVtdID0gW1xyXG4gICAgICAgIFtcInBcIiwgcmVjZWl2ZXJQdWJrZXldLFxyXG4gICAgICAgIFtcImFtb3VudFwiLCBTdHJpbmcoYW1vdW50KV0sXHJcbiAgICAgICAgW1wiZVwiLCB6YXBSZXF1ZXN0SWRdLFxyXG4gICAgICAgIFtcInBheWVyXCIsIHNlbmRlclB1YmtleV0sICAgLy8g4pyFIGNhbWJpYXRvIHF1aVxyXG4gICAgXVxyXG5cclxuICAgIHJldHVybiBjcmVhdGVFdmVudCg5NzM1LCBgWmFwIHJlY2VpcHQgb2YgJHthbW91bnR9IHNhdHNgLCB0YWdzLCBzaylcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBQdWJibGljYSB1biBldmVudG8gc3UgdHV0dGkgaSByZWxheVxyXG4gKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHB1Ymxpc2hFdmVudChldjogTm9zdHJFdmVudCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgbGV0IHNpZ25lZCA9IGV2XHJcblxyXG4gICAgLy8gc2UgaG8gTklQLTA3IHVzbyBxdWVsbG9cclxuICAgIGlmICgod2luZG93IGFzIGFueSkubm9zdHIpIHtcclxuICAgICAgICBzaWduZWQgPSBhd2FpdCAod2luZG93IGFzIGFueSkubm9zdHIuc2lnbkV2ZW50KGV2KVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLndhcm4oXCLimqAgTmVzc3VuIHByb3ZpZGVyIG5vc3RyIChOSVAtMDcpLCB1c28gc2sgcmFuZG9tXCIpXHJcbiAgICAgICAgLy8gZmFsbGJhY2s6IGZpcm1hIGxvY2FsZSAo4pqgIHNlIHZ1b2kgdXNhIGxhIHR1YSBzayBxdWkpXHJcbiAgICAgICAgc2lnbmVkLnNpZyA9IHNpZ25FdmVudChldiwgXCJcIilcclxuICAgIH1cclxuXHJcbiAgICAvLyDinIUgb3JhIHBhc3NvIHNvbG8gc3RyaW5nW11cclxuICAgIGNvbnN0IHB1YnMgPSBwb29sLnB1Ymxpc2gocmVsYXlVcmxzLCBzaWduZWQpXHJcbiAgICBhd2FpdCBQcm9taXNlLmFsbChwdWJzKVxyXG59XHJcblxyXG4vLyDwn5SiIENvbnRhIGlsIG51bWVybyBkaSB6YXBSZWNlaXB0ICg5NzM1KSBsZWdhdGkgYSB1biBjb250ZW51dG9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvdW50UHVyY2hhc2VzKGl0ZW1JZDogc3RyaW5nLCByZWxheXM6IHN0cmluZ1tdID0gUkVMQVlTLm1hcChyID0+IHIudXJsKSk6IFByb21pc2U8bnVtYmVyPiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcclxuICAgICAgICBsZXQgY291bnQgPSAwO1xyXG4gICAgICAgIGNvbnN0IHN1YiA9IHBvb2wuc3ViKHJlbGF5cywgW3sga2luZHM6IFs5NzM1XSwgXCIjZVwiOiBbaXRlbUlkXSB9XSk7XHJcblxyXG4gICAgICAgIHN1Yi5vbihcImV2ZW50XCIsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIvCfk6kgWmFwIHRyb3ZhdG86XCIsIGV2ZW50KTtcclxuICAgICAgICAgICAgY291bnQrKztcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc3ViLm9uKFwiZW9zZVwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHN1Yi51bnN1YigpO1xyXG4gICAgICAgICAgICByZXNvbHZlKGNvdW50KTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY291bnRBY3RpdmVQdXJjaGFzZXMoXHJcbiAgICBwb3N0SWQ6IHN0cmluZyxcclxuICAgIHJlbGF5czogc3RyaW5nW11cclxuKTogUHJvbWlzZTxudW1iZXI+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGxhc3RFdmVudDogUmVjb3JkPHN0cmluZywgTm9zdHJFdmVudD4gPSB7fTtcclxuXHJcbiAgICAgICAgY29uc3Qgc3ViID0gcG9vbC5zdWIocmVsYXlzLCBbeyBraW5kczogWzk3MzUsIDk3MzZdLCBcIiNlXCI6IFtwb3N0SWRdIH1dKTtcclxuXHJcbiAgICAgICAgc3ViLm9uKFwiZXZlbnRcIiwgKGV2ZW50OiBOb3N0ckV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIC8vIGNlcmNoaWFtbyBjaGkgaGEgZmF0dG8gbCdhemlvbmU6IHB1w7IgZXNzZXJlIFwiZnJvbVwiIG9wcHVyZSBcInBheWVyXCJcclxuICAgICAgICAgICAgY29uc3QgcGF5ZXIgPVxyXG4gICAgICAgICAgICAgICAgZXZlbnQudGFncy5maW5kKCh0KSA9PiB0WzBdID09PSBcImZyb21cIik/LlsxXSB8fFxyXG4gICAgICAgICAgICAgICAgZXZlbnQudGFncy5maW5kKCh0KSA9PiB0WzBdID09PSBcInBheWVyXCIpPy5bMV07XHJcblxyXG4gICAgICAgICAgICBpZiAoIXBheWVyKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICBjb25zdCBwcmV2ID0gbGFzdEV2ZW50W3BheWVyXTtcclxuICAgICAgICAgICAgaWYgKCFwcmV2IHx8IGV2ZW50LmNyZWF0ZWRfYXQgPiBwcmV2LmNyZWF0ZWRfYXQpIHtcclxuICAgICAgICAgICAgICAgIGxhc3RFdmVudFtwYXllcl0gPSBldmVudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBzdWIub24oXCJlb3NlXCIsICgpID0+IHtcclxuICAgICAgICAgICAgLy8gdXRlbnRpIGlsIGN1aSB1bHRpbW8gZXZlbnRvIMOoIHVuIGFjcXVpc3RvICg5NzM1KVxyXG4gICAgICAgICAgICBjb25zdCBzdGlsbEFjdGl2ZSA9IE9iamVjdC52YWx1ZXMobGFzdEV2ZW50KS5maWx0ZXIoXHJcbiAgICAgICAgICAgICAgICAoZXYpID0+IGV2LmtpbmQgPT09IDk3MzVcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgcmVzb2x2ZShzdGlsbEFjdGl2ZS5sZW5ndGgpO1xyXG4gICAgICAgICAgICBzdWIudW5zdWIoKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIENyZWEgdW4gZXZlbnRvIGRpIGVsaW1pbmF6aW9uZSAoa2luZCA1KVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURlbGV0ZUV2ZW50KFxyXG4gICAgZXZlbnRJZDogc3RyaW5nLFxyXG4gICAgcmVhc29uID0gXCJkZWxldGVkXCIsXHJcbiAgICBzaz86IFVpbnQ4QXJyYXlcclxuKTogTm9zdHJFdmVudCB7XHJcbiAgICBjb25zdCB0YWdzID0gW1tcImVcIiwgZXZlbnRJZF0sIFtcInJlYXNvblwiLCByZWFzb25dXVxyXG4gICAgcmV0dXJuIGNyZWF0ZUV2ZW50KDUsIHJlYXNvbiwgdGFncywgc2spXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhIHVuIGV2ZW50byBkaSB1bnN1YnNjcmliZSAoa2luZCA5NzM2IHBlcnNvbmFsaXp6YXRvKVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVuc3Vic2NyaWJlRXZlbnQoXHJcbiAgICBwb3N0SWQ6IHN0cmluZyxcclxuICAgIHVzZXJQdWJrZXk6IHN0cmluZyxcclxuICAgIHNrPzogVWludDhBcnJheVxyXG4pIHtcclxuICAgIHJldHVybiBjcmVhdGVFdmVudChcclxuICAgICAgICA5NzM2LFxyXG4gICAgICAgIGBVbnN1YnNjcmliZSBmcm9tIHBvc3QgJHtwb3N0SWR9YCxcclxuICAgICAgICBbXHJcbiAgICAgICAgICAgIFtcImVcIiwgcG9zdElkXSxcclxuICAgICAgICAgICAgW1wicGF5ZXJcIiwgdXNlclB1YmtleV0gICAvLyDinIUgYWxsaW5lYXRvXHJcbiAgICAgICAgXSxcclxuICAgICAgICBza1xyXG4gICAgKTtcclxufVxyXG4iXSwibmFtZXMiOlsiU2ltcGxlUG9vbCIsImdldFB1YmxpY0tleSIsImdldEV2ZW50SGFzaCIsInNpZ25FdmVudCIsIlJFTEFZUyIsInBvb2wiLCJyZWxheVVybHMiLCJtYXAiLCJyIiwidXJsIiwidG9IZXgiLCJieXRlcyIsIkFycmF5IiwiZnJvbSIsImIiLCJ0b1N0cmluZyIsInBhZFN0YXJ0Iiwiam9pbiIsImdlbmVyYXRlU2VjcmV0S2V5Iiwic2siLCJVaW50OEFycmF5IiwiY3J5cHRvIiwiZ2V0UmFuZG9tVmFsdWVzIiwiY3JlYXRlRXZlbnQiLCJraW5kIiwiY29udGVudCIsInRhZ3MiLCJzZWNyZXQiLCJza0hleCIsInB1YmtleSIsImV2IiwiY3JlYXRlZF9hdCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJpZCIsInNpZyIsImNyZWF0ZVphcFJlcXVlc3QiLCJzZW5kZXJQdWJrZXkiLCJyZWNlaXZlclB1YmtleSIsImFtb3VudCIsIm5vdGVJZCIsIlN0cmluZyIsInB1c2giLCJjcmVhdGVaYXBSZWNlaXB0IiwiemFwUmVxdWVzdElkIiwicHVibGlzaEV2ZW50Iiwic2lnbmVkIiwid2luZG93Iiwibm9zdHIiLCJjb25zb2xlIiwid2FybiIsInB1YnMiLCJwdWJsaXNoIiwiUHJvbWlzZSIsImFsbCIsImNvdW50UHVyY2hhc2VzIiwiaXRlbUlkIiwicmVsYXlzIiwicmVzb2x2ZSIsImNvdW50Iiwic3ViIiwia2luZHMiLCJvbiIsImV2ZW50IiwibG9nIiwidW5zdWIiLCJjb3VudEFjdGl2ZVB1cmNoYXNlcyIsInBvc3RJZCIsImxhc3RFdmVudCIsInBheWVyIiwiZmluZCIsInQiLCJwcmV2Iiwic3RpbGxBY3RpdmUiLCJPYmplY3QiLCJ2YWx1ZXMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJjcmVhdGVEZWxldGVFdmVudCIsImV2ZW50SWQiLCJyZWFzb24iLCJjcmVhdGVVbnN1YnNjcmliZUV2ZW50IiwidXNlclB1YmtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/nostr.ts\n"));

/***/ })

});