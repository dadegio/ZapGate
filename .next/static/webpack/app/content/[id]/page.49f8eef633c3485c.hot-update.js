"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/content/[id]/page",{

/***/ "(app-pages-browser)/./lib/nostr.ts":
/*!**********************!*\
  !*** ./lib/nostr.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   countActivePurchases: function() { return /* binding */ countActivePurchases; },\n/* harmony export */   countPurchases: function() { return /* binding */ countPurchases; },\n/* harmony export */   createDeleteEvent: function() { return /* binding */ createDeleteEvent; },\n/* harmony export */   createEvent: function() { return /* binding */ createEvent; },\n/* harmony export */   createUnsubscribeEvent: function() { return /* binding */ createUnsubscribeEvent; },\n/* harmony export */   createZapReceipt: function() { return /* binding */ createZapReceipt; },\n/* harmony export */   createZapRequest: function() { return /* binding */ createZapRequest; },\n/* harmony export */   generateSecretKey: function() { return /* binding */ generateSecretKey; },\n/* harmony export */   pool: function() { return /* binding */ pool; },\n/* harmony export */   publishEvent: function() { return /* binding */ publishEvent; }\n/* harmony export */ });\n/* harmony import */ var nostr_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nostr-tools */ \"(app-pages-browser)/./node_modules/nostr-tools/lib/esm/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./lib/config.ts\");\n\n\n// Pool condiviso\nconst pool = new nostr_tools__WEBPACK_IMPORTED_MODULE_0__.SimplePool();\n// ðŸ”— Utility: array di soli URL (stringhe)\nconst relayUrls = _config__WEBPACK_IMPORTED_MODULE_1__.RELAYS.map((r)=>r.url);\n/**\r\n * Utils: Uint8Array -> hex string\r\n */ function toHex(bytes) {\n    return Array.from(bytes).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\r\n * Genera una secret key random (Uint8Array)\r\n */ function generateSecretKey() {\n    const sk = new Uint8Array(32);\n    crypto.getRandomValues(sk);\n    return sk;\n}\n/**\r\n * Crea e firma un evento Nostr\r\n */ function createEvent(kind, content) {\n    let tags = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], sk = arguments.length > 3 ? arguments[3] : void 0;\n    const secret = sk || generateSecretKey();\n    const skHex = toHex(secret) // âœ… conversione in hex\n    ;\n    const pubkey = (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.getPublicKey)(skHex);\n    const ev = {\n        kind,\n        pubkey,\n        created_at: Math.floor(Date.now() / 1000),\n        tags,\n        content\n    };\n    return {\n        ...ev,\n        id: (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.getEventHash)(ev),\n        sig: (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.signEvent)(ev, skHex)\n    };\n}\n/**\r\n * Crea una Zap Request (kind 9734)\r\n */ function createZapRequest(param) {\n    let { senderPubkey, receiverPubkey, amount, noteId, sk } = param;\n    const tags = [\n        [\n            \"p\",\n            receiverPubkey\n        ],\n        [\n            \"amount\",\n            String(amount)\n        ],\n        [\n            \"from\",\n            senderPubkey\n        ]\n    ];\n    if (noteId) tags.push([\n        \"e\",\n        noteId\n    ]);\n    return createEvent(9734, \"Zap request of \".concat(amount, \" sats\"), tags, sk);\n}\n/**\r\n * Crea una Zap Receipt (kind 9735)\r\n */ function createZapReceipt(param) {\n    let { receiverPubkey, senderPubkey, amount, zapRequestId, sk } = param;\n    const tags = [\n        [\n            \"p\",\n            receiverPubkey\n        ],\n        [\n            \"amount\",\n            String(amount)\n        ],\n        [\n            \"e\",\n            zapRequestId\n        ],\n        [\n            \"payer\",\n            senderPubkey\n        ]\n    ];\n    return createEvent(9735, \"Zap receipt of \".concat(amount, \" sats\"), tags, sk);\n}\n/**\r\n * Pubblica un evento su tutti i relay\r\n */ async function publishEvent(ev) {\n    let signed = ev;\n    // se ho NIP-07 uso quello\n    if (window.nostr) {\n        signed = await window.nostr.signEvent(ev);\n    } else {\n        console.warn(\"âš  Nessun provider nostr (NIP-07), uso sk random\");\n        // fallback: firma locale (âš  se vuoi usa la tua sk qui)\n        signed.sig = (0,nostr_tools__WEBPACK_IMPORTED_MODULE_0__.signEvent)(ev, \"\");\n    }\n    // âœ… ora passo solo string[]\n    const pubs = pool.publish(relayUrls, signed);\n    await Promise.all(pubs);\n}\n// ðŸ”¢ Conta il numero di zapReceipt (9735) legati a un contenuto\nasync function countPurchases(itemId) {\n    let relays = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _config__WEBPACK_IMPORTED_MODULE_1__.RELAYS.map((r)=>r.url);\n    return new Promise((resolve)=>{\n        let count = 0;\n        const sub = pool.sub(relays, [\n            {\n                kinds: [\n                    9735\n                ],\n                \"#e\": [\n                    itemId\n                ]\n            }\n        ]);\n        sub.on(\"event\", (event)=>{\n            console.log(\"\\uD83D\\uDCE9 Zap trovato:\", event);\n            count++;\n        });\n        sub.on(\"eose\", ()=>{\n            sub.unsub();\n            resolve(count);\n        });\n    });\n}\nasync function countActivePurchases(postId, relays) {\n    return new Promise((resolve)=>{\n        const lastEvent = {};\n        const sub = pool.sub(relays, [\n            {\n                kinds: [\n                    9735,\n                    9736\n                ],\n                \"#e\": [\n                    postId\n                ]\n            }\n        ]);\n        sub.on(\"event\", (event)=>{\n            var _event_tags_find, _event_tags_find1;\n            // cerchiamo chi ha fatto l'azione: puÃ² essere \"from\" oppure \"payer\"\n            const payer = ((_event_tags_find = event.tags.find((t)=>t[0] === \"from\")) === null || _event_tags_find === void 0 ? void 0 : _event_tags_find[1]) || ((_event_tags_find1 = event.tags.find((t)=>t[0] === \"payer\")) === null || _event_tags_find1 === void 0 ? void 0 : _event_tags_find1[1]);\n            if (!payer) return;\n            const prev = lastEvent[payer];\n            if (!prev || event.created_at > prev.created_at) {\n                lastEvent[payer] = event;\n            }\n        });\n        sub.on(\"eose\", ()=>{\n            // utenti il cui ultimo evento Ã¨ un acquisto (9735)\n            const stillActive = Object.values(lastEvent).filter((ev)=>ev.kind === 9735);\n            resolve(stillActive.length);\n            sub.unsub();\n        });\n    });\n}\n/**\r\n * Crea un evento di eliminazione (kind 5)\r\n */ function createDeleteEvent(eventId) {\n    let reason = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"deleted\", sk = arguments.length > 2 ? arguments[2] : void 0;\n    const tags = [\n        [\n            \"e\",\n            eventId\n        ],\n        [\n            \"reason\",\n            reason\n        ]\n    ];\n    return createEvent(5, reason, tags, sk);\n}\n/**\r\n * Crea un evento di unsubscribe (kind 9736 personalizzato)\r\n */ function createUnsubscribeEvent(postId, userPubkey, sk) {\n    return createEvent(9736, \"Unsubscribe from post \".concat(postId), [\n        [\n            \"e\",\n            postId\n        ],\n        [\n            \"p\",\n            userPubkey\n        ]\n    ], sk);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/nostr.ts\n"));

/***/ })

});